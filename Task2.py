"""В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью, 
получены опытные данные:
6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1
Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей, 
оценить истинное значение величины X при помощи доверительного интервала, покрывающего это значение 
с доверительной вероятностью 0,95."""


import math

# Заданные значения
data = [6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1]
confidence = 0.95  # уровень доверия

# Рассчитываем выборочное среднее и стандартное отклонение
sample_mean = sum(data) / len(data)
sample_std = math.sqrt(sum((x - sample_mean) ** 2 for x in data) / (len(data) - 1))

# Рассчитываем значение t-статистики для заданного уровня доверия и объема выборки
t_value = 2.262  # для n = 10 и уровня доверия 0.95

# Рассчитываем стандартную ошибку среднего
standard_error = sample_std / math.sqrt(len(data))

# Рассчитываем доверительный интервал
lower_bound = sample_mean - t_value * standard_error
upper_bound = sample_mean + t_value * standard_error

# Выводим результаты
print("Доверительный интервал:", (lower_bound, upper_bound))


"""neDrive/Рабочий стол/Stud/TeorVer/Sem6DZ/Task2.py"
Доверительный интервал: (6.267538255912425, 6.912461744087573)"""
